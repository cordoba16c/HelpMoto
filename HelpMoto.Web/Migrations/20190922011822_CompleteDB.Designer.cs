// <auto-generated />
using System;
using HelpMoto.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HelpMoto.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190922011822_CompleteDB")]
    partial class CompleteDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.Concessionaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("Ownerid");

                    b.HasKey("Id");

                    b.HasIndex("Ownerid");

                    b.ToTable("Concessionaires");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.CraneService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MotorcycleId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("MotorcycleId");

                    b.ToTable("CraneServices");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.ExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("Ownerid");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("Ownerid");

                    b.ToTable("ExtraServices");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("MotorcycleTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("Ownerid");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("Shop");

                    b.HasKey("Id");

                    b.HasIndex("MotorcycleTypeId");

                    b.HasIndex("Ownerid");

                    b.ToTable("Motorcycles");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.MotorcycleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MotorcycleTypes");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.Owner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<string>("CellPhone")
                        .HasMaxLength(20);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FixedPhone")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.PlaceSelling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MotorcycleId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("Ownerid");

                    b.Property<int?>("PlaceSellingTypeId");

                    b.HasKey("Id");

                    b.HasIndex("MotorcycleId");

                    b.HasIndex("Ownerid");

                    b.HasIndex("PlaceSellingTypeId");

                    b.ToTable("PlaceSellings");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.PlaceSellingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PlaceSellingTypes");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.WorkshopService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MotorcycleId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("WorkshopTypeId");

                    b.HasKey("Id");

                    b.HasIndex("MotorcycleId");

                    b.HasIndex("WorkshopTypeId");

                    b.ToTable("WorkshopServices");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.WorkshopType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("WorkshopTypes");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.Concessionaire", b =>
                {
                    b.HasOne("HelpMoto.Web.Data.Entities.Owner", "Owner")
                        .WithMany("Concessionaires")
                        .HasForeignKey("Ownerid");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.CraneService", b =>
                {
                    b.HasOne("HelpMoto.Web.Data.Entities.Motorcycle", "Motorcycle")
                        .WithMany("CraneServices")
                        .HasForeignKey("MotorcycleId");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.ExtraService", b =>
                {
                    b.HasOne("HelpMoto.Web.Data.Entities.Owner", "Owner")
                        .WithMany("ExtraServices")
                        .HasForeignKey("Ownerid");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.Motorcycle", b =>
                {
                    b.HasOne("HelpMoto.Web.Data.Entities.MotorcycleType", "MotorcycleType")
                        .WithMany("Motorcycles")
                        .HasForeignKey("MotorcycleTypeId");

                    b.HasOne("HelpMoto.Web.Data.Entities.Owner", "Owner")
                        .WithMany("Motorcycles")
                        .HasForeignKey("Ownerid");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.PlaceSelling", b =>
                {
                    b.HasOne("HelpMoto.Web.Data.Entities.Motorcycle", "Motorcycle")
                        .WithMany("PlaceSellings")
                        .HasForeignKey("MotorcycleId");

                    b.HasOne("HelpMoto.Web.Data.Entities.Owner", "Owner")
                        .WithMany("PlaceSellings")
                        .HasForeignKey("Ownerid");

                    b.HasOne("HelpMoto.Web.Data.Entities.PlaceSellingType", "PlaceSellingType")
                        .WithMany("PlaceSellings")
                        .HasForeignKey("PlaceSellingTypeId");
                });

            modelBuilder.Entity("HelpMoto.Web.Data.Entities.WorkshopService", b =>
                {
                    b.HasOne("HelpMoto.Web.Data.Entities.Motorcycle")
                        .WithMany("WorkshopServices")
                        .HasForeignKey("MotorcycleId");

                    b.HasOne("HelpMoto.Web.Data.Entities.WorkshopType", "WorkshopType")
                        .WithMany("WorkshopServices")
                        .HasForeignKey("WorkshopTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
